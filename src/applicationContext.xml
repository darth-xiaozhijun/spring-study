<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- id表示获取到对象标识
    	 class 创建哪个类的对象
     -->
    <!-- <bean id="people" class="com.pojo.People"/> -->
    <bean id="people" class="com.pojo.People">
    	<!-- ref引用另一个bean   value 基本数据类型或String等 -->
    	<constructor-arg index="0" name="id" type="int" value="123"></constructor-arg>
    	<constructor-arg index="1" name="name" type="java.lang.String" value="张三"></constructor-arg>
	    <property name="id">
	    		<value>456</value>
	    	</property>
	    	<property name="name">
	    		<value>zhangsan</value>
	    	</property>
	    	<property name="sets">
	    		<set>
	    			<value>1</value>
	    			<value>2</value>
	    			<value>3</value>
	    			<value>4</value>
	    		</set>
	    	</property>
	    	<property name="list" value="1">
	    	</property>
	    	<property name="strs" >
	    		<array>
	    			<value>1</value>
	    			<value>2</value>
	    			<value>3</value>
	    		</array>
	    	</property>
	    	<property name="map">
	    		<map>
	    			<entry key="a" value="b" >
	    			</entry>
	    			<entry key="c" value="d" >
	    			</entry>
	    		</map>
	    	</property>
	    	
	    	<!-- <property name="demo">
	    		<props>
	    			<prop key="key">value</prop>
	    			<prop key="key1">value1</prop>
	    		</props>
	    	</property> -->
	    	
	    	<property name="desk" ref="desk"></property>
    </bean>
    
     <bean id="desk" class="com.pojo.Desk">
    	<property name="id" value="1"></property>
    	<property name="price" value="12"></property>
    </bean>
    
   	<!--  实例工厂 -->
    <bean id="peopleFactory" class="com.pojo.PeopleFactory"></bean>
    <bean id="peo1" factory-bean="peopleFactory" factory-method="newInstance"></bean>
   	
   	<!-- 静态工厂 --> 
    <bean id="peo2" class="com.pojo.PeopleFactory" factory-method="newInstanceStatic"></bean>
    
    <!-- 数据源封装类 .数据源:获取数据库连接,spring-jdbc.jar中-->
    <bean id="dataSouce" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    	<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
    	<property name="url" value="jdbc:mysql://localhost:3306/ssm"></property>
    	<property name="username" value="root"></property>
    	<property name="password" value="123456"></property>
    </bean>
    
    <!-- 创建SqlSessionFactory对象 -->
    <bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<!-- 数据库连接信息来源于dataSource -->
    	<property name="dataSource" ref="dataSouce"></property>
    </bean>
    
    <!-- 扫描器相当于mybatis.xml中 mappers下package标签,扫描com.bjsxt.mapper包后会给对应接口创建对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<!-- 要扫描哪个包 -->
    	<property name="basePackage" value="com.mapper"></property>
    	<!-- 和factory产生关系 -->
    	<property name="sqlSessionFactory" ref="factory"></property>
    </bean>
    
    <!-- 由spring管理service实现类 -->
    <bean id="airportService" class="com.service.impl.AirportServiceImpl">
    	<property name="airportMapper" ref="airportMapper"></property>
    </bean>
</beans>